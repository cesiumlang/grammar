{
  "name": "cesium",
  "scopeName": "source.cesium",
  "fileTypes": [
    "cs",
    "czm"
  ],
  "uuid": "9ad5dda1-f2d3-478f-a8e2-5eef5b7bedf5",
  "patterns": [
    { "include": "#comments" },
    { "include": "#keywords" },
    { "include": "#function-declarations" },
    { "include": "#struct-declarations" },
    { "include": "#variable-declarations" },
    { "include": "#types" },
    { "include": "#strings" },
    { "include": "#numbers" },
    { "include": "#operators" },
    { "include": "#identifiers" }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        { "name": "keyword.control.cesium", "match": "\\b(if|else|while|for|do|with|defer|break|continue|switch|case|fallthrough|return|throw|catch)\\b" },
        { "name": "storage.modifier.cesium", "match": "\\b(const|static|private|secret|volatile|atomic|register|simd|extern|export)\\b" },
        { "name": "keyword.other.cesium", "match": "\\b(alias|as|comptime|generic|sizeof|typeof|asm|enum|error|union|operator|context|property|destruct|trait|impl|type|namespace|std|struct)\\b" },
        { "name": "constant.language.cesium", "match": "\\b(true|false|null|pi|stdout|stdin|stderr)\\b" }
      ]
    },
    "types": {
      "patterns": [
        { "name": "storage.type.primitive.cesium", "match": "\\b(u\\d+|i\\d+|f16|f32|f64|f128|uword|void)\\b" },
        { "name": "storage.type.builtin.cesium", "match": "\\b(file|str|list|dict|slice|path)\\b" },
        { "name": "invalid.errorstruct.cesium", "match": "\\b[A-Z](?=.*[a-z])[a-zA-Z0-9_]*Error\\b" },
        { "name": "entity.name.type.cesium", "match": "\\b[A-Z](?=.*[a-z])[a-zA-Z0-9_]*\\b" },
        {
          "name": "storage.type.generic.cesium",
          "begin": "\\b(list|dict|slice)\\[",
          "end": "\\]",
          "patterns": [ { "include": "#types" }, { "name": "punctuation.separator.cesium", "match": "," } ]
        }
      ]
    },
    "function-declarations": {
      "patterns": [
        {
          "name": "meta.function.cesium",
          "begin": "\\b([a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?(?:,\\s*[a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)*)\\s*(=)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "end": "\\)",
          "beginCaptures": {
            "1": { "name": "entity.name.type.cesium" },
            "2": { "name": "keyword.operator.assignment.cesium" },
            "3": { "name": "entity.name.function.cesium" }
          },
          "patterns": [ { "include": "#function-parameters" } ]
        },
        {
          "name": "meta.function.generic.cesium",
          "begin": "\\bgeneric<([^>]+)>\\s*([a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?(?:,\\s*[a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)*)\\s*(=)\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
          "end": "\\)",
          "beginCaptures": {
            "1": { "name": "storage.type.generic.parameter.cesium" },
            "2": { "name": "entity.name.type.cesium" },
            "3": { "name": "keyword.operator.assignment.cesium" },
            "4": { "name": "entity.name.function.cesium" }
          },
          "patterns": [ { "include": "#function-parameters" } ]
        }
      ]
    },
    "function-parameters": {
      "patterns": [
        {
          "name": "meta.parameter.error.cesium",
          "match": "\\b([~#]?[A-Z](?=.*[a-z])[a-zA-Z0-9_]*Error(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": { "name": "invalid.errorstruct.cesium" },
            "2": { "name": "variable.parameter.cesium" }
          }
        },
        {
          "name": "meta.parameter.type.cesium",
          "match": "\\b([~#]?[A-Z](?=.*[a-z])[a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": { "name": "entity.name.type.cesium" },
            "2": { "name": "variable.parameter.cesium" }
          }
        },
        {
          "name": "meta.parameter.cesium",
          "match": "\\b([~#]?[a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": { "name": "storage.type.cesium" },
            "2": { "name": "variable.parameter.cesium" }
          }
        }
      ]
    },
    "struct-declarations": {
      "patterns": [
        {
          "name": "meta.struct.cesium",
          "begin": "\\b(struct)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\{",
          "end": "\\}",
          "beginCaptures": {
            "1": { "name": "keyword.other.cesium" },
            "2": { "name": "entity.name.type.struct.cesium" }
          },
          "patterns": [
            { "include": "#struct-methods" },
            { "include": "#struct-fields" },
            { "include": "#comments" }
          ]
        }
      ]
    },
    "struct-fields": {
      "patterns": [
        {
          "name": "meta.field.qualified.cesium",
          "match": "\\b(private|secret|static|volatile|atomic)\\s+([a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s*=\\s*([^;]+))?;",
          "captures": {
            "1": { "name": "storage.modifier.cesium" },
            "2": { "name": "storage.type.cesium" },
            "3": { "name": "variable.other.member.cesium" },
            "4": { "name": "constant.other.cesium" }
          }
        },
        {
          "name": "meta.field.cesium",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?:\\s*=\\s*([^;]+))?;",
          "captures": {
            "1": { "name": "storage.type.cesium" },
            "2": { "name": "variable.other.member.cesium" },
            "3": { "name": "constant.other.cesium" }
          }
        }
      ]
    },
    "variable-declarations": {
      "patterns": [
        {
          "name": "meta.variable.declaration.error.cesium",
          "match": "\\b([~#]?[A-Z](?=.*[a-z])[a-zA-Z0-9_]*Error(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*[=,;])",
          "captures": {
            "1": { "name": "invalid.errorstruct.cesium" },
            "2": { "name": "variable.other.cesium" }
          }
        },
        {
          "name": "meta.variable.declaration.type.cesium",
          "match": "\\b([~#]?[A-Z](?=.*[a-z])[a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*[=,;])",
          "captures": {
            "1": { "name": "entity.name.type.cesium" },
            "2": { "name": "variable.other.cesium" }
          }
        },
        {
          "name": "meta.variable.declaration.cesium",
          "match": "\\b([~#]?[a-zA-Z_][a-zA-Z0-9_]*(?:\\[[^\\]]*\\])?)\\s+([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*[=,;])",
          "captures": {
            "1": { "name": "storage.type.cesium" },
            "2": { "name": "variable.other.cesium" }
          }
        },
        {
          "name": "meta.variable.assignment.cesium",
          "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)(?=\\s*=)",
          "captures": {
            "1": { "name": "variable.other.cesium" }
          }
        }
      ]
    },
    "struct-methods": {
      "patterns": [
        {
          "name": "meta.method.static.cesium",
          "match": "\\b(static)\\s+([A-Z][a-zA-Z0-9_]*)\\s*=\\s*([a-zA-Z_][a-zA-Z0-9_]*)\\s*(?=\\()",
          "captures": {
            "1": { "name": "storage.modifier.cesium" },
            "2": { "name": "entity.name.type.cesium" },
            "3": { "name": "entity.name.function.method.cesium" }
          }
        },
        {
          "name": "meta.constructor.cesium",
          "begin": "\\b([A-Z][a-zA-Z0-9_]*)\\s*\\(",
          "end": "\\)",
          "beginCaptures": { "1": { "name": "entity.name.function.constructor.cesium" } },
          "patterns": [ { "include": "#function-parameters" } ]
        },
        {
          "name": "meta.destructor.cesium",
          "begin": "\\bdestruct\\s+([A-Z][a-zA-Z0-9_]*)\\s*\\(",
          "end": "\\)",
          "beginCaptures": { "1": { "name": "entity.name.function.destructor.cesium" } },
          "patterns": [ { "include": "#function-parameters" } ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.block.documentation.cesium",
          "begin": "/\\*\\*",
          "end": "\\*/",
          "patterns": [ { "name": "keyword.other.documentation.cesium", "match": "@(param|return|throws|author|since|version|see|deprecated)\\b" } ]
        },
        {
          "name": "comment.line.double-slash.cesium",
          "match": "//.*$"
        },
        {
          "name": "comment.block.cesium",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.cesium",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            { "name": "constant.character.escape.cesium", "match": "\\\\[\"'\\\\nrt0]" },
            { "name": "constant.character.escape.unicode.cesium", "match": "\\\\u\\{[0-9a-fA-F]+\\}" }
          ]
        },
        {
          "name": "string.interpolated.cesium",
          "begin": "`",
          "end": "`",
          "patterns": [
            { "name": "constant.character.escape.cesium", "match": "\\\\[`\\\\nrt0]" },
            {
              "name": "meta.embedded.line.cesium",
              "begin": "\\{",
              "end": "\\}",
              "patterns": [ { "include": "$self" } ]
            }
          ]
        },
        {
          "name": "constant.character.cesium",
          "begin": "'",
          "end": "'",
          "patterns": [ { "name": "constant.character.escape.cesium", "match": "\\\\[\"'\\\\nrt0]" } ]
        },
        {
          "name": "string.other.path.cesium",
          "begin": "\\bpath\\s*\\(",
          "end": "\\)",
          "patterns": [ { "include": "#strings" } ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.float.cesium",
          "match": "\\b\\d+\\.\\d+([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "constant.numeric.integer.hex.cesium",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.integer.binary.cesium",
          "match": "\\b0[bB][01]+\\b"
        },
        {
          "name": "constant.numeric.integer.octal.cesium",
          "match": "\\b0[oO][0-7]+\\b"
        },
        {
          "name": "constant.numeric.integer.cesium",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        { "name": "keyword.operator.assignment.cesium", "match": "#=|:=" },
        { "name": "keyword.operator.range.step.cesium", "match": "\\.\\.(?=\\d+\\.\\.=?)" },
        { "name": "keyword.operator.unary.cesium", "match": "(?<!\\w)\\.\\.(?!\\w|=)|(?<=\\w)\\.\\.(?!\\w|=)" },
        { "name": "keyword.operator.range.cesium", "match": "\\.\\.=?" },
        { "name": "keyword.operator.comparison.cesium", "match": "==|!=|<=|>=|<|>" },
        { "name": "keyword.operator.logical.cesium", "match": "&&|\\|\\||!" },
        { "name": "keyword.operator.bitwise.cesium", "match": "&|\\||><|<<|>>" },
        { "name": "keyword.operator.string.cesium", "match": "\\*\\*" },
        { "name": "keyword.operator.arithmetic.cesium", "match": "\\+\\+|\\-\\-|\\+|\\-|::|@|\\*|\\/|%|\\^" },
        { "name": "keyword.operator.assignment.cesium", "match": "\\*\\*=|\\+=|\\-=|\\*=|\\/=|%=|&=|\\|=|><=|<<=|>>=|=" },
        { "name": "keyword.operator.custom.cesium", "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*\\$" },
        { "name": "keyword.operator.pointer.cesium", "match": "~|#" }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "support.function.builtin.cesium",
          "match": "\\b(alloc|free|realloc|printf|debugf|assert|floor|ceil|trunc|round|trueround|abs|min|max|mean|norm)(?=\\s*\\()"
        },
        {
          "name": "support.function.method.cesium",
          "match": "(?<=\\.)[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        },
        {
          "name": "entity.name.function.call.cesium",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        },
        {
          "name": "variable.language.cesium",
          "match": "\\b(this|super|self)\\b"
        },
        {
          "name": "variable.other.member.cesium",
          "match": "(?<=\\.)[a-zA-Z_][a-zA-Z0-9_]*(?!\\s*\\()"
        },
        {
          "name": "variable.other.constant.cesium",
          "match": "\\b[A-Z][A-Z0-9_]*\\b"
        },
        {
          "name": "invalid.errorstruct.cesium",
          "match": "\\b[A-Z](?=.*[a-z])[a-zA-Z0-9_]*Error\\b"
        },
        {
          "name": "entity.name.type.cesium",
          "match": "\\b[A-Z](?=.*[a-z])[a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.cesium",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
